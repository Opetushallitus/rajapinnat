<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" 
       xmlns:jaxws="http://cxf.apache.org/jaxws"
       xmlns:jaxrs="http://cxf.apache.org/jaxrs"
       xmlns:camel="http://camel.apache.org/schema/spring"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd 
        http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd 
        http://cxf.apache.org/core http://cxf.apache.org/schemas/core.xsd
        http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd 
        http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

    <!-- Turn on AspectJ @Configurable support -->
    <context:spring-configured />
    <context:annotation-config />
    <context:component-scan base-package="fi.vm.sade.rajapinnat.kela" />
    
    <!-- Turn on @Autowired, @PostConstruct etc support -->
    <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor" />
    <bean class="org.springframework.context.annotation.CommonAnnotationBeanPostProcessor" />
    
    <bean scope="singleton" class="fi.vm.sade.organisaatio.service.search.OrganisaatioSearchService"/>
    <bean scope="singleton" class="fi.vm.sade.organisaatio.service.search.SolrServerFactory"/>
    
    <bean scope="singleton" class="fi.vm.sade.tarjonta.service.search.TarjontaSearchService"/>
    <bean scope="singleton" class="fi.vm.sade.tarjonta.service.search.SolrServerFactory"/>

    <context:property-placeholder
        location="classpath:kela-opti.properties, file:///${user.home:''}/oph-configuration/common.properties, file:///${user.home:''}/oph-configuration/kela-opti.properties, file:///${user.home:''}/oph-configuration/override.properties"
        ignore-resource-not-found="true" />

    <jaxws:client id="koodiPublicService"
                serviceClass="fi.vm.sade.koodisto.service.KoodiService"
                address="${koodi.public.webservice.url.backend:http://NO_KOODI_WEBSERVICE_URL_CONFIGURED}"/>

    <jaxws:client id="koodistoPublicService"
                  serviceClass="fi.vm.sade.koodisto.service.KoodistoService"
                  address="${koodisto.public.webservice.url.backend:http://NO_KOODISTO_WEBSERVICE_URL_CONFIGURED}"/>

    <jaxws:client id="organisaatioService"
                  serviceClass="fi.vm.sade.organisaatio.api.model.OrganisaatioService"
                  address="${organisaatio.webservice.url.backend:http://NO_ORGANISAATIO_WEBSERVICE_URL_CONFIGURED}"/>
                  
    <jaxrs:client id="organisaatioResource"
                  address="${organisaatio.api.rest.url}"
                  serviceClass="fi.vm.sade.organisaatio.resource.OrganisaatioResource"
                  inheritHeaders="true">
        <jaxrs:providers>
            <bean class="org.codehaus.jackson.jaxrs.JacksonJsonProvider"/>
        </jaxrs:providers>
    </jaxrs:client>
    
    <!-- Let Spring create the Camel context and the Camel template, including lifecycle management such as starting and stopping them -->
    <camel:camelContext id="kelaCamelContext">
        <camel:template id="kelaCamelTemplate" />
    </camel:camelContext>

</beans>
